# spring:
#   security:
#     oauth2:
#       client:
#         registration:
#           google:
#             clientId: 162422478014-k7801p5p52th4qqn4iur14452kg6aolh.apps.googleusercontent.com
#             clientSecret: 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
#             scope: profile, email

jwt.secret=14f850c0c7cbaaf3a7e9b1ab1146d8c799e769980e04bdd62752027254b27c7c545af6910f762a1822aaf93a351669dc84c384a2a5ee5ccfdadfaacb8d32c79c

spring.jpa.hibernate.ddl-auto=create

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.oauth2=DEBUG

spring.security.oauth2.client.registration.google.clientId=162422478014-k7801p5p52th4qqn4iur14452kg6aolh.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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
spring.security.oauth2.client.registration.google.scope=profile, email

spring.security.oauth2.client.registration.naver.client-id=81kPz2x3zVwtUQF49hb8
spring.security.oauth2.client.registration.naver.client-secret=ZCmYmiO2aJ
spring.security.oauth2.client.registration.naver.scope=name, email
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

spring.security.oauth2.client.registration.kakao.client-id=3a66ba33e45450e4b7364ef2b9ee7f40
spring.security.oauth2.client.registration.kakao.client-secret=LQnso3K2M7k11VJzD9zfteRFMoH0GWwf
spring.security.oauth2.client.registration.kakao.scope=profile_nickname
spring.security.oauth2.client.registration.kakao.client-name=kakao-login
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

spring.web.cors.allow-credentials=true
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET, POST, PUT, DELETE, OPTIONS
spring.web.cors.allowed-headers=*

spring.datasource.url=jdbc:mysql://localhost:3306/web1?useUnicode=true&characterEncoding=utf8mb4&serverTimezone=UTC



# naver clientID : 81kPz2x3zVwtUQF49hb8, secret : ZCmYmiO2aJ, scope : profile, email
# kakao clientID : 3a66ba33e45450e4b7364ef2b9ee7f40, secret : LQnso3K2M7k11VJzD9zfteRFMoH0GWwf

# spring.jpa.hibernate.ddl-auto=update //데이터베이스 자동 생성 및 업데이트
# spring.datasource.driverClassName=org.mariadb.jdbc.Driver
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://192.168.146.136:3306/web1
spring.datasource.username=root
spring.datasource.password=5162

# Hibernate DDL Auto (none, update, create, create-drop)
spring.jpa.hibernate.ddl-auto=update

# SQL 문을 콘솔에서 보여주는 옵션
spring.jpa.show-sql=true

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect


# flyway {
#     url = 'jdbc:mariadb://192.168.146.128:3306/web1'
#     user = 'root'
#     password = '5162'
#     locations = ['filesystem:src/main/resources/db/migration']
# }

